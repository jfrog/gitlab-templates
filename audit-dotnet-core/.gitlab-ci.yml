# Use this template to audit a .NET project for security vulnerabilities with JFrog Xray.
# The `jf audit` command works as follows:
#
# 1. It creates a dependency tree for the project, including the direct and indirect (transitives) dependencies
# 2. Scans the dependency tree with JFrog Xray
# 3. Displays the vulnerabilities found
#
# To create the dependency tree, the command expects the dependencies to be presented on the local agent.
#
# Requirements:
# Configure 'ARTIFACTORY_REMOTE_REPO' variable with the NuGet repository in JFrog Artifactory
# from which the dependencies can be resolved.

default:
  image: mono

include:
  - remote: "https://releases.jfrog.io/artifactory/jfrog-cli/gitlab/.setup-jfrog.yml"
jfrog-nuget-audit:
  script:
    - !reference [.setup_jfrog, script]

    # Configure the Artifactory repository
    - jf dotnet-config --repo-resolve $ARTIFACTORY_REMOTE_REPO

    # Ensure the project dependencies are presented locally
    - jf dotnet restore

    # Audit .NET project
    - jf audit

  after_script:
    # Cleanup
    - !reference [.cleanup_jfrog, script]
